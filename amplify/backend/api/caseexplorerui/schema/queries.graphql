type Query {
  queryNetworkByUserInput(
    DataSources: [String],
    Keywords: String,
    Articles: String,
    Eclis: String,
    DegreesSources: Int,
    DegreesTargets: Int,
    DateStart: AWSDate,
    DateEnd: AWSDate,
    Instances: [String],
    Domains: [String],
    Doctypes: [String]
  ): Network @function(name: "queryhandler-${env}")
  computeNetworkStatistics(
    nodes: [NodeInput],
    edges: [EdgeInput],
    subNodes: [NodeInput]
  ): AWSJSON @function(name: "networkstatistics-${env}")
  fetchNodeData(
    node: NodeInput
  ): Node @function(name: "datafetcher-${env}")
  batchFetchNodeData(
    nodes: [NodeInput]
  ): [Node] @function(name: "batchdatafetcher-${env}")
  test(
    Ecli: String
  ): Node @function(name: "test-${env}")
}

type Network {
  allNodes: [Node]
  allEdges: [Edge]
  nodes: [Node]
  edges: [Edge]
  message: String
}

type Node {
  id: String
  data: AWSJSON
}

input NodeInput {
  id: String
  data: AWSJSON
}

type Edge {
  id: String
  source: String
  target: String
  data: String
}

input EdgeInput {
  id: String
  source: String
  target: String
}
